#!/usr/bin/env python3
"""
Script de test pour la postulation automatique
"""

import json
import sys
import os

# Donn√©es de test - Utilisateur avec email, t√©l√©phone et chemin CV sp√©cifiques pour le test
test_config = {
    "firstName": "Test",
    "lastName": "Utilisateur",
    "email": "test.utilisateur@example.com",  # Email sp√©cifique pour le test
    "phone": "0712345678",  # Format t√©l√©phone fran√ßais standard
    "message": "Je suis passionn√© par le d√©veloppement web et je recherche une alternance pour approfondir mes comp√©tences.",
    "cv_path": "uploads/mon_cv_test.pdf",  # Utilise cv_path au lieu de cvPath pour tester la d√©tection multiple
    "coverLetterPath": "uploads/ma_lettre_test.pdf",  # Nom modifi√© pour les tests
    "searchKeywords": "d√©veloppement web, javascript, python",  # Mots-cl√©s pertinents
    "location": "Lyon",  # Localisation diff√©rente
    "jobTypes": "alternance, stage",
    "contractTypes": "Alternance",  # Uniquement alternance
    "educationLevel": "master",  # Niveau d'√©ducation diff√©rent
    "searchRadius": "30",  # Rayon de recherche diff√©rent
    "search_query": "d√©veloppeur web",  # Requ√™te de recherche sp√©cifique
    "settings": {
        "delayBetweenApplications": 5,
        "maxApplicationsPerSession": 2,  # Limit√© √† 2 pour les tests
        "autoFillForm": True,
        "autoSendApplication": True,
        "pauseBeforeSend": True,  # Pause ajout√©e pour v√©rifier les formulaires
        "captureScreenshots": True
    }
}

if __name__ == "__main__":
    print("üöÄ Test de postulation automatique")
    print("Configuration:", json.dumps(test_config, indent=2))
    
    # Lancer le script d'automatisation
    import subprocess
    
    try:
        # Cr√©er les dossiers n√©cessaires
        os.makedirs("uploads", exist_ok=True)
        os.makedirs("debug_screenshots", exist_ok=True)
        os.makedirs("logs", exist_ok=True)
        
        # Cr√©er des fichiers de test avec les nouveaux noms
        cv_path = "uploads/mon_cv_test.pdf"
        cover_letter_path = "uploads/ma_lettre_test.pdf"
        
        if not os.path.exists(cv_path):
            with open(cv_path, "w") as f:
                f.write("CV de test sp√©cifique pour tester l'int√©gration email/t√©l√©phone/cv")
            print(f"üìÑ CV de test cr√©√© √† {cv_path}")
        
        if not os.path.exists(cover_letter_path):
            with open(cover_letter_path, "w") as f:
                f.write("Lettre de motivation de test sp√©cifique")
            print(f"üìÑ Lettre de motivation cr√©√©e √† {cover_letter_path}")
        
        print("üìÅ Dossiers et fichiers de test cr√©√©s")
        
        # Lancer le script d'automatisation
        print("ü§ñ Lancement de l'automatisation...")
        
        # Passer la configuration via stdin
        process = subprocess.Popen(
            ["python3", "python_scripts/automation_runner.py"],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        stdout, stderr = process.communicate(input=json.dumps(test_config))
        
        print("üì§ Sortie du script:")
        print(stdout)
        
        if stderr:
            print("‚ùå Erreurs:")
            print(stderr)
            
    except Exception as e:
        print(f"‚ùå Erreur: {e}") 